local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Celebrity Arena",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Celebrity Arena",
   LoadingSubtitle = "Loading Scripts... <3",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "CELEARENA HUB"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local CharTab = Window:CreateTab("Character", nil) -- Title, Image
local Section = CharTab:CreateSection("Gamepasses & Coins")

local Section = CharTab:CreateSection("Olivia")

local Button = CharTab:CreateButton({
   Name = "Olivia: MET GALA",
   Callback = function()
   local args = {
	"Olivia",
	"1"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SelectCharacter"):FireServer(unpack(args))

wait(1)
Rayfield:Notify({
   Title = "Gamepass Has Been Bypassed...",
   Content = "Became Olivia Sucessfully",
   Duration = 6.5,
   Image = nil,
})
   end,
})

local Section = CharTab:CreateSection("Sabrina Carpenter")

local Button = CharTab:CreateButton({
   Name = "Sabrina: SHORT N' SWEET",
   Callback = function()
   local args = {
	"Sabrina",
	"1"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SelectCharacter"):FireServer(unpack(args))

wait(1)
Rayfield:Notify({
   Title = "Gamepass Has Been Bypassed...",
   Content = "Became Sabrina Sucessfully",
   Duration = 6.5,
   Image = nil,
})
   end,
})

local Section = CharTab:CreateSection("Ariana")

local Button = CharTab:CreateButton({
   Name = "Ariana: YES, AND?",
   Callback = function()
   local args = {
	"Ariana",
	"1"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SelectCharacter"):FireServer(unpack(args))

wait(1)
Rayfield:Notify({
   Title = "Gamepass Has Been Bypassed...",
   Content = "Became Ariana Sucessfully",
   Duration = 6.5,
   Image = nil,
})
   end,
})

local Button = CharTab:CreateButton({
   Name = "Ariana: ETERNAL SUNSHINE",
   Callback = function()
   ocal args = {
	"Ariana",
	"2"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("SelectCharacter"):FireServer(unpack(args))

wait(1)
Rayfield:Notify({
   Title = "Gamepass Has Been Bypassed...",
   Content = "Became Ariana Sucessfully",
   Duration = 6.5,
   Image = nil,
})
   end,
})
